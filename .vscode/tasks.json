{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build C++ (Fast)",
            "type": "shell",
            "command": "g++",
            "args": [
                "-std=c++17",
                "-O1",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compila√ß√£o r√°pida sem debug"
        },
        {
            "label": "Build C++ (Debug)",
            "type": "shell",
            "command": "g++",
            "args": [
                "-std=c++17",
                "-g",
                "-O0",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "group": "build",
            "problemMatcher": ["$gcc"],
            "detail": "Compila√ß√£o com debug (mais lenta)"
        },
        {
            "label": "Quick Build",
            "type": "shell",
            "command": "g++",
            "args": [
                "-std=c++17",
                "-O2",
                "-DNDEBUG",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "group": "build",
            "problemMatcher": ["$gcc"],
            "detail": "Compila√ß√£o ultra-r√°pida para testes"
        },
        {
            "label": "Build and Run C++ (Fast)",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "g++ -std=c++17 -O1 '${file}' -o '${fileDirname}\\${fileBasenameNoExtension}.exe'; if ($LASTEXITCODE -eq 0) { & '${fileDirname}\\${fileBasenameNoExtension}.exe' }"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compila√ß√£o r√°pida e execu√ß√£o"
        },
        {
            "label": "Build and Run Ultra-Fast",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "g++ -std=c++17 -O2 -DNDEBUG '${file}' -o '${fileDirname}\\${fileBasenameNoExtension}.exe'; if ($LASTEXITCODE -eq 0) { Write-Host '‚ö° Executando ultra-r√°pido:' -ForegroundColor Green; & '${fileDirname}\\${fileBasenameNoExtension}.exe' }"
            ],
            "group": "build",
            "problemMatcher": ["$gcc"],
            "detail": "Compila√ß√£o e execu√ß√£o ultra-r√°pida no terminal integrado"
        },
        {
            "label": "Run C++",
            "type": "shell",
            "command": "${fileDirname}\\${fileBasenameNoExtension}.exe",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "detail": "Executar o programa compilado"
        },
        {
            "type": "cppbuild",
            "label": "C/C++: g++.exe build active file",
            "command": "C:\\Strawberry\\c\\bin\\g++.exe",
            "args": [
                "-fdiagnostics-color=always",
                "-std=c++17",
                "-O1",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": ["$gcc"],
            "group": "build",
            "detail": "Compila√ß√£o autom√°tica otimizada"
        },
        {
            "label": "Build Tests",
            "type": "shell",
            "command": "g++",
            "args": [
                "-std=c++17",
                "-g",
                "-O0",
                "test_main.cpp",
                "-o",
                "test_runner.exe"
            ],
            "group": "build",
            "problemMatcher": ["$gcc"],
            "detail": "Compilar os testes unit√°rios",
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": ".\\test_runner.exe",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "detail": "Executar os testes unit√°rios",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": "Build Tests"
        },
        {
            "label": "Build and Run Tests",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "Write-Host 'üß™ Compilando testes...' -ForegroundColor Cyan; g++ -std=c++17 -g -O0 test_main.cpp -o test_runner.exe; if ($LASTEXITCODE -eq 0) { Write-Host 'üöÄ Executando testes...' -ForegroundColor Green; .\\test_runner.exe } else { Write-Host '‚ùå Falha na compila√ß√£o!' -ForegroundColor Red }"
            ],
            "group": "test",
            "problemMatcher": ["$gcc"],
            "detail": "Compilar e executar todos os testes unit√°rios",
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Build Tests (Release)",
            "type": "shell",
            "command": "g++",
            "args": [
                "-std=c++17",
                "-O2",
                "-DNDEBUG",
                "test_main.cpp",
                "-o",
                "test_runner_release.exe"
            ],
            "group": "build",
            "problemMatcher": ["$gcc"],
            "detail": "Compilar os testes em modo release (mais r√°pido)",
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Run Tests (Release)",
            "type": "shell",
            "command": ".\\test_runner_release.exe",
            "group": "test",
            "detail": "Executar os testes em modo release",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": "Build Tests (Release)"
        }
    ]
}